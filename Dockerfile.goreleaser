# We use ubuntu:22.04 here which is a common and stable base
FROM ubuntu:22.04 AS builder
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get -qq -y install jq curl

# We only build for amd64 now, so TARGETPLATFORM logic is simpler
ARG TARGETPLATFORM=linux/amd64

ARG CAESIUM_GITHUB_REPO=Lymphatus/caesium-clt
RUN CAESIUM_LATEST_RELEASE=$(curl -s https://api.github.com/repos/$CAESIUM_GITHUB_REPO/releases/latest | jq -r '.tag_name') \
    && if [ "$TARGETPLATFORM" = "linux/amd64" ]; then CAESIUM_ARCH=x86_64-unknown-linux-musl; \
       else echo "Platform not supported by ${CAESIUM_GITHUB_REPO}"; exit 126; fi \
    && CAESIUM_ARCHIVE=caesiumclt-${CAESIUM_LATEST_RELEASE}-${CAESIUM_ARCH} \
    && curl -sS -L -O --output-dir /tmp/ --create-dirs  "https://github.com/$CAESIUM_GITHUB_REPO/releases/latest/download/${CAESIUM_ARCHIVE}.tar.gz" \
    && tar xzf "/tmp/${CAESIUM_ARCHIVE}.tar.gz" -C /tmp \
    && mv "/tmp/${CAESIUM_ARCHIVE}/caesiumclt" /usr/local/bin/caesiumclt

# Final stage
FROM zocker160/handbrake-nvenc:latest

# Install libjxl-tools manually from GitHub releases
ARG LIBJXL_VERSION=v0.11.1
ARG LIBJXL_UBUNTU_VERSION=22.04
RUN apt-get update && apt-get install -y --no-install-recommends curl \
    && LIBJXL_DEBS_ARCHIVE="jxl-debs-amd64-ubuntu-${LIBJXL_UBUNTU_VERSION}-${LIBJXL_VERSION}.tar.gz" \
    && curl -sS -L -o "/tmp/${LIBJXL_DEBS_ARCHIVE}" "https://github.com/libjxl/libjxl/releases/download/${LIBJXL_VERSION}/${LIBJXL_DEBS_ARCHIVE}" \
    && mkdir -p /tmp/jxl-debs \
    && tar xzf "/tmp/${LIBJXL_DEBS_ARCHIVE}" -C /tmp/jxl-debs \
    # Use dpkg to install the downloaded .deb files. This handles dependencies.
    && apt-get install -y /tmp/jxl-debs/*.deb \
    # Clean up to keep the image small
    && rm -rf /tmp/jxl-debs /tmp/${LIBJXL_DEBS_ARCHIVE}

# Install other required tools
# REMOVED: libjxl-tools (installed above) and libc6-compat (incorrect for ubuntu)
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
      jq \
      curl \
      libvips-tools \
      exiftool \
      ffmpeg \
      imagemagick \
    && rm -rf /var/lib/apt/lists/*

COPY --from=builder /usr/local/bin/caesiumclt /usr/local/bin/caesiumclt

COPY config/lossless /etc/immich-upload-optimizer/config
COPY config /etc/immich-upload-optimizer/bundled-configs
ENV IUO_TASKS_FILE=/etc/immich-upload-optimizer/config/tasks.yaml

COPY immich-upload-optimizer /usr/local/bin/
CMD ["immich-upload-optimizer"]
